Objective

Your task is to build and deploy a full-stack web application that allows users to:

1. Sign up and log in using Google authentication.

2. Create and edit a text-based letter (like a simple word processor).

3. Save the letter to the user's Google Drive using the Google Drive API.



Requirements

1. Technology Stack

* Front-End: React (Preferred) or Angular/Vue.js

* Back-End: Node.js with Express (Preferred) or Python with Flask/Django

* Database: PostgreSQL, MySQL, or MongoDB (if needed)

* Authentication: Google OAuth (via Firebase Auth or Passport.js)

* Storage API: Google Drive API

* Deployment: Any cloud provider (Netlify, Vercel, Heroku, AWS, Azure, or GCP)

* Version Control: GitHub or GitLab repository



Features & Functionalities

2. User Authentication (Google OAuth)

* Implement Google Sign-In so users can authenticate using their Google accounts.

* Ensure secure session management (JWT or session-based authentication).



3. Letter Creation & Editing

* Provide a simple text editor where users can write and format a letter.

* Allow users to save drafts within the application before uploading to Google Drive.

* Ensure a user-friendly UI with minimal distractions.



4. Google Drive API Integration

* Implement Google Drive API to allow users to save letters directly to their Google Drive.

* Save letters in Google Docs format.

* Allow users to retrieve and view their saved letters from Google Drive.

* Ensure proper OAuth scopes and permissions to prevent unauthorized access.



5. Deployment

* Deploy the front-end and back-end so the application is accessible via a public URL.

* Provide a .env.example file for environment variables such as API keys.



6. Bonus Features (Optional)

* Implement folder organization in Google Drive (e.g., automatically create a "Letters" folder for saved documents).

* Add rich text editing features (bold, italic, lists, etc.).

* Implement role-based access control (e.g., admin and regular users).

* Add real-time collaboration (Google Docs-style editing with WebSockets).